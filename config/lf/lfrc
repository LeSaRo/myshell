#: Options {{{
set drawbox
#set hidden true
set info size:time
set icons true
set ignorecase true
set scrolloff 5 # Leave space at the top and bottom
set wrapscroll
#:}}}

#: Mappings {{{

#: Goto {{{
map gda $lf -remote "send $id cd $MYSH_DIR_DATA"
map gde $lf -remote "send $id cd $MYSH_DIR_DEV"
map gdl cd ~/downloads
map gdo cd ~/documents
map gc cd ~/.config
map gi cd ~/images
map gm $lf -remote "send $id cd /run/media/$(whoami)"
#:}}}

map a :push %mkdir<space>
# mkdir command. See wiki if you want it to select created dir
map <delete> delete

# Switch between 1 panel and full mode
map o mode

map sn :{{ # keep info when sorting by name
    set sortby name; set info size:time
}}
#:}}}

#: Shell {{{
# interpreter for shell commands
set shell sh
set shellopts '-eu'
set ifs "\n"


# use enter for shell commands
map <enter> shell

# show the result of execution of previous commands
map ^ !true

# execute current file (must be executable)
map x $$f
map X !$f
#:}}}

#: File {{{
cmd create ${{
    #push %touch<space>
    echo "$(basename "$f")" | awk -F. "{ print \$1 }"
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    read -p "Extract where: " name; name="${name:-"."}" 
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) mkdir -p "$name"; tar xjvf $f;;
        *.tar.gz|*.tgz) mkdir -p "$name"; tar xzvf $f;;
        *.tar.xz|*.txz) mkdir -p "$name"; tar xJvf $f;;
        *.zip) unzip $f -d "$name";;
        *.rar) unrar x $f "$name";;
        *.7z) 7z x $f -o"$name";;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
#:}}}

#: Preview & Opener {{{
# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd mode %{{
    if [ "$lf_preview" = true ]; then
        lf -remote "send $id :set preview false; set ratios 1"
    else
        lf -remote "send $id :set ratios 1:2:3; set preview true"
    fi
}}

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id
#:}}}

# vim:fileencoding=utf-8:foldmethod=marker
